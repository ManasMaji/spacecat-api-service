openapi: 3.0.0
info:
  version: 1.0.0
  title: SpaceCat API

paths:
  /organizations:
    post:
      summary: Create a new organization
      security:
        - admin_key: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Organization'
      responses:
        201:
          description: Organization created successfully
        400:
          description: Invalid request body
    get:
      summary: Retrieve all organizations
      security:
        - api_key: []
      responses:
        200:
          description: A list of organizations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization'

  /organizations/{organizationId}:
    parameters:
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
    get:
      summary: Retrieve a single organization
      security:
        - api_key: []
      responses:
        200:
          description: An organization object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
        404:
          description: Organization not found
    put:
      summary: Update an organization
      security:
        - admin_key: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Organization'
      responses:
        200:
          description: Organization updated successfully
        400:
          description: Invalid request body
        404:
          description: Organization not found
    delete:
      summary: Delete an organization
      security:
        - admin_key: []
      responses:
        204:
          description: Organization deleted successfully
        404:
          description: Organization not found

  /organizations/{organizationId}/sites:
    post:
      summary: Create a new site
      security:
        - admin_key: []
      parameters:
        - name: organizationId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Site'
      responses:
        201:
          description: Site created successfully
        400:
          description: Invalid request body
    get:
      summary: Retrieve all sites for a given organization
      security:
        - api_key: []
      parameters:
        - name: organizationId
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: A list of sites
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Site'
        404:
          description: Organization not found

  /organizations/{organizationId}/sites/{siteId}:
    parameters:
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
      - name: siteId
        in: path
        required: true
        schema:
          type: string
    get:
      summary: Retrieve a single site
      security:
        - api_key: []
      responses:
        200:
          description: A site object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site'
        404:
          description: Site not found
    put:
      summary: Update a site
      security:
        - admin_key: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Site'
      responses:
        200:
          description: Site updated successfully
        400:
          description: Invalid request body
        404:
          description: Site not found
    delete:
      summary: Delete a site
      security:
        - admin_key: []
      responses:
        204:
          description: Site deleted successfully
        404:
          description: Site not found

  /organizations/{organizationId}/sites/{siteId}/audits:
    post:
      summary: Create a new audit
      security:
        - admin_key: []
      parameters:
        - name: organizationId
          in: path
          required: true
          schema:
            type: string
        - name: siteId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Audit'
      responses:
        201:
          description: Audit created successfully
        400:
          description: Invalid request body
    get:
      summary: Retrieve all audits for a given site
      security:
        - api_key: []
      parameters:
        - name: organizationId
          in: path
          required: true
          schema:
            type: string
        - name: siteId
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: A list of audits
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Audit'
        404:
          description: Site not found

  /organizations/{organizationId}/sites/{siteId}/audits/{auditId}:
    parameters:
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
      - name: siteId
        in: path
        required: true
        schema:
          type: string
      - name: auditId
        in: path
        required: true
        schema:
          type: string
    get:
      summary: Retrieve a single audit
      security:
        - api_key: []
      responses:
        200:
          description: An audit object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Audit'
        404:
          description: Audit not found
    put:
      summary: Update an audit
      security:
        - admin_key: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Audit'
      responses:
        200:
          description: Audit updated successfully
        400:
          description: Invalid request body
        404:
          description: Audit not found
    delete:
      summary: Delete an audit
      security:
        - admin_key: []
      responses:
        204:
          description: Audit deleted successfully
        404:
          description: Audit not found
  /sites:
    get:
      summary: Retrieve sites by domain and path
      security:
        - api_key: []
      parameters:
        - name: domain
          in: query
          required: false
          schema:
            type: string
        - name: path
          in: query
          required: false
          schema:
            type: string
      responses:
        200:
          description: A list of sites matching the query parameters
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Site'
        400:
          description: Bad request (invalid query parameters)
        404:
          description: No sites found matching the query parameters
  /sites.xlsx:
    get:
      summary: Download sites data in XLSX format
      security:
        - api_key: []
      responses:
        200:
          description: Sites data file in XLSX format
          content:
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
              schema:
                type: string
                format: binary
        500:
          description: Internal server error

  /sites.csv:
    get:
      summary: Download sites data in CSV format
      security:
        - api_key: []
      responses:
        200:
          description: Sites data file in CSV format
          content:
            text/csv:
              schema:
                type: string
                format: binary
        500:
          description: Internal server error

components:
  schemas:
    Organization:
      type: object
      properties:
        id:
          type: string
          format: uuid
        ims_org_id:
          type: string
        sales_force_id:
          type: string
        github_org_id:
          type: string
        name:
          type: string
        vertical:
          type: string
          enum:
            - AEM-CS
        created_at:
          type: string
          format: date-time

    Site:
      type: object
      properties:
        organization_id:
          type: string
          format: uuid
        domain:
          type: string
        path:
          type: string
        type:
          type: string
          enum:
            - edge
            - cs
            - other
        github_repo_id:
          type: string
        content_source:
          type: string
        slack_channels:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              description:
                type: string
        status:
          type: string
          enum:
            - new
            - wip
            - certification
            - live
            - attrition
        intended_go_live_date:
          type: string
          format: date
        actual_go_live_date:
          type: string
          format: date
        previous_cms:
          type: string
        implemented_by:
          type: string
        created_at:
          type: string
          format: date-time

    Audit:
      type: object
      properties:
        id:
          type: string
          format: uuid
        site_id:
          type: string
          format: uuid
        audited_at:
          type: string
          format: date-time
        type:
          type: string
          enum:
            - psi
            # Additional audit types...
        is_error:
          type: boolean
        is_live:
          type: boolean
        markdown_content:
          type: string
        markdown_diff:
          type: string
        github_diff:
          type: string
        audit_results:
          type: object

  securitySchemes:
    api_key:
      type: apiKey
      in: header
      name: X-API-Key
    admin_key:
      type: apiKey
      in: header
      name: X-Admin-Key
